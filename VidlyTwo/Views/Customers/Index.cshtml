
@model IEnumerable<VidlyTwo.Models.Customer>
@{
    ViewBag.Title = "Index";
}

<h2>Customers</h2>
<br />
@if (Model.Any())
{
    <table id="customers" class="table table-striped table-hover table-bordered">
        <thead>
            <tr>
                <th>Customer</th>
                <th>Membserhip Type</th>
                <th>Delete</th>
            </tr>
        </thead>
        @foreach (var customer in Model)
        {
            <tr>
                <td> @Html.ActionLink(@customer.Name, "Edit", "Customers", new {id = @customer.Id}, null)</td>
                <td>@customer.MembershipType.Name</td>
                <td>
                    <button data-customer-id="@customer.Id" class="btn-link js-delete">Delete</button>
                </td>
            </tr>
        }
    </table>

}
else
{
    <p>We don't have any customers yet.</p>

}

@section scripts{
    <script>
        $(document).ready(function() {
            $("#customers").on("click", ".js-delete",
                function() {
                    var button = $(this);
                    bootbox.confirm(("Are you sure you want to delete this customer?"),
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: "/api/customers/" + button.attr("data-customer-id"),
                                    method: "DELETE",
                                    success: function() {
                                        button.parents("tr").remove();
                                    }
                                });
                            }
                        });
                });
        });

        //Jquery optimization:
        //$("#customers .js-delete").on("click"
        //for each customer we're gonna have a delete button and for each delete button we are going to have a separate handler function 
        //in the memory, the more customers we have, the more memory we consume.
        //To fix that it's better to use a filter, like this,
        //With this implementation 
        //$("#customers").on("click", ".js-delete",
        //No matter how many customers we have. we'll gonna have one click handler attached to the table that we'll be raised by .js-delete
    </script>
}

